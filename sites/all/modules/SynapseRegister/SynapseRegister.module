<?php
/*
 * Synapse Registration form
 * @author Cameron Milton <cameron@anat.org.au>
 * @todo: mailchimp check before subscribing
 * @todo: check email doesn't already exist
 */

/**
 * Alters user registration form to hook into the solve360, and mailchimp databases.
 */

//MailChimp functions
function MailChimpSubscribe($email) {
	//module_load_include('php', 'SynapeRegister', 'Solve360Service');	
	include_once(DRUPAL_ROOT.'/sites/all/modules/SynapseRegister/MCAPI.class.php'); //API 1.3

	//gateway
	$api = new MCAPI(variable_get('SynapseRegister_mailchimpkey'));
	if(isset($form_state['values']['field_first_name']) && isset($form_state['values']['field_last_name']))

	$retval = $api->listSubscribe( variable_get('SynapseRegister_mailchimplistid'), $email,  array(
		'FNAME' => $form_state['values']['field_first_name'], 
		'LNAME' => $form_state['values']['field_last_name']
	));

	if ($api->errorCode){
        drupal_set_message(t("MailChimp Error: Unable to subscribe.\n\tCode=".$api->errorCode."\n\tMsg=".$api->errorMessage), 'error');
	} else {
    	drupal_set_message(t("MailChimp:ANAT mail list subscription request has been sent."),'status');
	}

}

//solve360 functions
function Solve360registerUser($email) {
	//poor check to make sure the form will pass.

	//module_load_include('php', 'SynapeRegister', 'Solve360Service');	
	include_once(DRUPAL_ROOT.'/sites/all/modules/SynapseRegister/Solve360Service.php');

	//gateway
	$solve360 = new Solve360Service(
		variable_get('SynapseRegister_solve360user'), 
		variable_get('SynapseRegister_solve360key')
	);

	//if user exists
	$id=Solve360UserExists($email,$solve360);
	if((bool)$id !== false) {
		//add to synapse
		$categoryID='16652194';
		$solve360->editContact($id,array("categories" => array("add" => array("category" =>array($categoryID)))));
			drupal_set_message(t('Solve360: Added synapse category to '.$email), 'status');
		return;
	}

	//add contact
	$contactData = array(
		'bussinessemail' => $email,
		//synapse category
	);

	if(isset($form_state['values']['field_first_name']))
		$contactData['firstname'] = $form_state['values']['field_first_name'];
	if(isset($form_state['values']['field_last_name']))
		$contactData['firstname'] = $form_state['values']['field_last_name'];
	
	$contact = $solve360->addContact($contactData);
	if(isset($contact->errors)) {
		drupal_set_message(t('Error: was unable to add contact to Solve360'), 'error');
	} else {
		drupal_set_message(t("&lt;".$email."&gt; added to solve360."), 'status');
	}

}

function Solve360UserExists($email, $solve360) {
      $search = array(
                'layout' => 1,
                'searchmode' => array('Cany'),
                'fieldlist' => 'bussinessemail',
                'filtermode' => array('bussinessemail'),
                'searchvalue' => $email
                );
       $out = $solve360->searchContacts($search);
       if($out->count == "0") {
          return false;
		}
       else {
		  drupal_set_message("Solve360: User/Email &lt;".$email."&gt; already exists in.");
		  foreach($out->children() as $contact) {
        	    return $contact->id->__toString();
       	  }
	   }
}

/* variable_get('id') */

//hooks
/**
 * Implements admin().
 */
function SynapseRegister_admin() {
    //solve360key
    $form['SynapseRegister_solve360key'] = array (
        '#type' => 'textfield',
        '#title' => t('Solve360 api key'),
        '#default_value' => variable_get('SynapseRegister_solve360key', ''),
        '#description' => t("Solve360 API key"),
        '#required' => FALSE,
    );
	$form['SynapseRegister_solve360user'] = array (
        '#type' => 'textfield',
        '#title' => t('Solve360 email'),
        '#default_value' => variable_get('SynapseRegister_solve360user', ''),
        '#description' => t("Solve360 API Username/Email"),
        '#required' => FALSE,
    );

    $form['SynapseRegister_mailchimpkey'] = array(
		'#type' => 'textfield',
        '#title' => t('MailChimp api key'),
		'#default_value' => variable_get('SynapseRegister_mailchimpkey', ''),
		'#description' => t("MailChimp API Key"),
		'#required' => FALSE,
	);
    $form['SynapseRegister_mailchimplistid'] = array(
		'#type' => 'textfield',
        '#title' => t('MailChimp list id'),
		'#default_value' => variable_get('SynapseRegister_mailchimplistid', ''),
		'#description' => t("MailChimp List ID"),
		'#required' => FALSE,
	);

    return system_settings_form($form);
}

/**
 * Implements menu().
 */
function SynapseRegister_menu() {
    $items['admin/config/apikeys'] = array(
        'title' => 'API Keys',
        'description' => 'Set options for the registration form',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('SynapseRegister_admin'),
        'access arguments' => array('administer permissions'),
        'type' => MENU_NORMAL_ITEM,
    );
    return $items;
}
/**/
//end of admin

/**
 * Implements form_alter.
 */
function SynapseRegister_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_register_form') {
    $form['#validate'][] = 'SynapseRegister_user_register_form_validate';
  }
}

/**
 * Implements form_validate
*/
function SynapseRegister_user_register_form_validate($form, &$form_state) {
//	print_r($form_state['values']);
	//check values and then pass to function
	if( (!empty($form_state['values']['mail'])) && (!empty($form_state['values']['pass'])) && (!empty($form_state['values']['pass']))&&(!empty($form_state['values']['name']))) {
		Solve360registerUser($form_state['values']['mail']);
		MailChimpSubscribe($form_state['values']['mail']);
	}
}
/**/
//end of user registration form

?>
