<?php
/*
 * Synapse Registration form
 * @author Cameron Milton <cameron@anat.org.au>
 */

/**
 * parses a feed into a basic html list
 * @todo: prevent going over end of item array with validation.
 * dynamically generate form to add more feeds.
 */
 
 /* variable_get('id') */

//hooks
/**
 * Implements admin().
 */
function SynapseRegister_admin() {
	//solve360key
	$form['SynapseRegister_solve360key'] = array (
		'#type' => 'textfield',
		'#title' => t('solve360 api key'),
		'#default_value' => variable_get('SynapseRegister_solve360key', ''),
		'#description' => t("Solve360 API key"),
		'#required' => TRUE,
	);
    return system_settings_form($form);
}
/**
 * Implements admin_validate().
*/ 
function rssreader_admin_validate($form, &$form_state) {
    $num = $form_state['values']['rssreader_num'];
    if(!is_numeric($num) || ($num < 0)) {
        form_set_error('rssreader_num', t('You must enter a positive integer for the Number of Items.'));
    }
}
*/

/**
 * Implements menu().
 */
function rssreader_menu() {
    $items['admin/structure/Registration'] = array(
        'title' => 'Registration Form',
        'description' => 'Set options for the registration form',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('SynapseRegister_admin'),
        'access arguments' => array('administer permissions'),
        'type' => MENU_NORMAL_ITEM,
    );
    return $items;
}
//end of admin


/**
 *Implements block_info().

function rssreader_block_info() {
  $blocks['rssreader'] = array (
    'info' => 'RSS Reader',
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements block_view().
 *
function rssreader_block_view($delta = '') {
  $block = array();
  switch($delta) {
    case 'rssreader':
      $block['subject'] = t('');
      $block['content'] = array (
        '#markup' => t(rssreaderDisplay()),
      );
    break;
  }
  return $block;
}
*/
?>
